<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 注意 -->
<!-- <id column="user_id" property="userId" /> -->
<!-- ↑必ずスペース入れる -->
<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repository.UserMapper">
	<resultMap type="com.example.domain.user.model.MUser"
		id="user">
		<!-- columnがDBの項目でpropertyがJava側の変数名 -->
		<id column="user_id" property="userId" />
		<result column="password" property="password" />
		<result column="user_name" property="userName" />
		<result column="birthday" property="birthday" />
		<result column="age" property="age" />
		<result column="gender" property="gender" />
		<result column="department_id" property="departmentId" />
		<result column="role" property="role" />
		<association property="department" resultMap="department" />
		<!-- マッピング定義内に別のマッピング定義を入れる -->
		<collection property="salaryList" resultMap="salary"
			columnPrefix="salary_" />
		<!-- columnPrefix="salary_" /> -->
		<!-- マッピング定義内に別のマッピング定義を入れる -->
	</resultMap>
	<!-- マッピング定義（部署） -->
	<resultMap type="com.example.domain.user.model.Department"
		id="department">
		<id column="department_id" property="departmentId" />
		<result column="department_name" property="departmentName" />
	</resultMap>
	<!-- マッピング定義 （給料） -->
	<resultMap type="com.example.domain.user.model.Salary"
		id="salary">
		<id column="user_id" property="userId" />
		<id column="year_month" property="yearMonth" />
		<id column="salary" property="salary" />
	</resultMap>
	<!-- ユーザー1件登録 -->
	<insert id="insertOne"> 
		insert into m_user( user_id , password , user_name ,
		birthday , age , gender , department_id , role ) values ( #{userId} ,
		#{password} , #{userName} , #{birthday} , #{age} , #{gender} ,
		#{departmentId} , #{role} )
	</insert>
	<!-- ユーザー複数件取得 -->
	<select id="findMany" resultType="MUser">
		select * from m_user
		<where>
			<if test="userId != null"> user_id like '%'||#{userId}||'%'
			</if>
			<if test="userName != null"> and user_name like '%'||#{userName}||'%'
			</if>
		</where>
	</select>
	<!-- ユーザ一件検索 -->
	<select id="findOne" resultMap="user"> select 
	m_user.user_id,
	m_user.password,
	m_user.user_name,
	m_user.birthday,
	m_user.age,
	m_user.gender,
	m_department.department_id,
	m_department.department_name,
	<!-- columnPrefix="salary_" がここで使われる -->
	t_salary.user_id as salary_user_id,
	t_salary.year_month as salary_year_month,
	t_salary.salary as salary_salary
	<!-- columnPrefix="salary_" がここで使われる/> -->
	 from m_user left join
		m_department on m_user.department_id = m_department.department_id
		left join t_salary on m_user.user_id=t_salary.user_id
		where 
		m_user.user_id=#{userId}
	</select>
	<!-- ユーザ1件更新 -->
	<update id="updateOne"> update m_user set password = #{password}, user_name
		= #{userName} where user_id = #{userId}
	</update>
	<!-- もうひとつの書き方:::MUserを引数にとるやり方
		public void updateOne(@Param("user")MUser user);
		password = #{user.password},
		user_name = #{user.userName}
	-->
	<!-- ユーザ1件削除 -->
	<delete id="deleteOne"> delete from m_user where user_id = #{userId}
	</delete>

	<select id="findLoginUser" resultType="MUser">
	select
	*
	from 
	m_user
	where 
	user_id = #{id}
	</select>
</mapper>